// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Component Should render correctly with correct path 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(CssBaseline) />,
        <WithStyles(Snackbar)
          autoHideDuration={3000}
          message=""
          onClose={[Function]}
          open={false}
        />,
        <div
          className="title-bar"
          data-aos="fade-up"
        >
          <WithStyles(Typography)
            className="title"
            component="h2"
            style={
              Object {
                "color": "#000000",
              }
            }
            variant="h1"
          >
            <strong>
              LunchIn
            </strong>
          </WithStyles(Typography)>
          <WithStyles(Typography)
            className="tag-line"
            component="h2"
            data-aos="fade-up"
            variant="h3"
          >
            Automatically Choose a Lunch Option For You
          </WithStyles(Typography)>
        </div>,
        <div
          className="home-page-content"
        >
          <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>
        </div>,
      ],
      "className": "home-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoHideDuration": 3000,
          "message": "",
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>,
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>,
          ],
          "className": "title-bar",
          "data-aos": "fade-up",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <strong>
                LunchIn
              </strong>,
              "className": "title",
              "component": "h2",
              "style": Object {
                "color": "#000000",
              },
              "variant": "h1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "LunchIn",
              },
              "ref": null,
              "rendered": "LunchIn",
              "type": "strong",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Automatically Choose a Lunch Option For You",
              "className": "tag-line",
              "component": "h2",
              "data-aos": "fade-up",
              "variant": "h3",
            },
            "ref": null,
            "rendered": "Automatically Choose a Lunch Option For You",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
          "className": "home-page-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />,
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>,
            ],
            "className": "login-form",
            "data-aos": "slide-right",
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "login-form-header",
                "subheader": "Your Lunch Option Awaits",
                "title": "Sign In",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />,
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />,
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>,
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>,
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>,
                ],
                "className": "login-form-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "email",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "email",
                    "label": "E-mail",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "email",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "InputProps": Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    },
                    "className": "password",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "password",
                    "label": "Password",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "password",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-In",
                    "className": "login",
                    "color": "primary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-In",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Don't have an account? Signup now!",
                    "className": "signup-line",
                    "component": "h2",
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "subtitle1",
                  },
                  "ref": null,
                  "rendered": "Don't have an account? Signup now!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-Up",
                    "className": "login",
                    "color": "secondary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-Up",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(CssBaseline) />,
          <WithStyles(Snackbar)
            autoHideDuration={3000}
            message=""
            onClose={[Function]}
            open={false}
          />,
          <div
            className="title-bar"
            data-aos="fade-up"
          >
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>
          </div>,
          <div
            className="home-page-content"
          >
            <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>
          </div>,
        ],
        "className": "home-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoHideDuration": 3000,
            "message": "",
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="title"
                component="h2"
                style={
                  Object {
                    "color": "#000000",
                  }
                }
                variant="h1"
              >
                <strong>
                  LunchIn
                </strong>
              </WithStyles(Typography)>,
              <WithStyles(Typography)
                className="tag-line"
                component="h2"
                data-aos="fade-up"
                variant="h3"
              >
                Automatically Choose a Lunch Option For You
              </WithStyles(Typography)>,
            ],
            "className": "title-bar",
            "data-aos": "fade-up",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <strong>
                  LunchIn
                </strong>,
                "className": "title",
                "component": "h2",
                "style": Object {
                  "color": "#000000",
                },
                "variant": "h1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "LunchIn",
                },
                "ref": null,
                "rendered": "LunchIn",
                "type": "strong",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Automatically Choose a Lunch Option For You",
                "className": "tag-line",
                "component": "h2",
                "data-aos": "fade-up",
                "variant": "h3",
              },
              "ref": null,
              "rendered": "Automatically Choose a Lunch Option For You",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
            "className": "home-page-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                null,
                <WithStyles(CardHeader)
                  className="login-form-header"
                  subheader="Your Lunch Option Awaits"
                  title="Sign In"
                />,
                <WithStyles(CardContent)
                  className="login-form-content"
                >
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>
                </WithStyles(CardContent)>,
              ],
              "className": "login-form",
              "data-aos": "slide-right",
            },
            "ref": null,
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "login-form-header",
                  "subheader": "Your Lunch Option Awaits",
                  "title": "Sign In",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <TextField
                      className="email"
                      disabled={false}
                      fullWidth={true}
                      id="email"
                      label="E-mail"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="email"
                      value=""
                      variant="standard"
                    />,
                    <TextField
                      InputProps={
                        Object {
                          "endAdornment": <WithStyles(InputAdornment)
                            position="end"
                          >
                            <WithStyles(Tooltip)
                              placement="top"
                              title="Show Password"
                            >
                              <WithStyles(IconButton)
                                onClick={[Function]}
                              >
                                <pure(VisibilityOffIcon) />
                              </WithStyles(IconButton)>
                            </WithStyles(Tooltip)>
                          </WithStyles(InputAdornment)>,
                        }
                      }
                      className="password"
                      disabled={false}
                      fullWidth={true}
                      id="password"
                      label="Password"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="password"
                      value=""
                      variant="standard"
                    />,
                    <WithStyles(Button)
                      className="login"
                      color="primary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-In
                    </WithStyles(Button)>,
                    <WithStyles(Typography)
                      className="signup-line"
                      component="h2"
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="subtitle1"
                    >
                      Don't have an account? Signup now!
                    </WithStyles(Typography)>,
                    <WithStyles(Button)
                      className="login"
                      color="secondary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-Up
                    </WithStyles(Button)>,
                  ],
                  "className": "login-form-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "email",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "email",
                      "label": "E-mail",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "email",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "InputProps": Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      },
                      "className": "password",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "password",
                      "label": "Password",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "password",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-In",
                      "className": "login",
                      "color": "primary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-In",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Don't have an account? Signup now!",
                      "className": "signup-line",
                      "component": "h2",
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "subtitle1",
                    },
                    "ref": null,
                    "rendered": "Don't have an account? Signup now!",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-Up",
                      "className": "login",
                      "color": "secondary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-Up",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`When provided with incorrect credential for login Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    email="ajfakljfad@test.com"
    password="kajasjdalskj"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(CssBaseline) />,
        <WithStyles(Snackbar)
          autoHideDuration={3000}
          message=""
          onClose={[Function]}
          open={false}
        />,
        <div
          className="title-bar"
          data-aos="fade-up"
        >
          <WithStyles(Typography)
            className="title"
            component="h2"
            style={
              Object {
                "color": "#000000",
              }
            }
            variant="h1"
          >
            <strong>
              LunchIn
            </strong>
          </WithStyles(Typography)>
          <WithStyles(Typography)
            className="tag-line"
            component="h2"
            data-aos="fade-up"
            variant="h3"
          >
            Automatically Choose a Lunch Option For You
          </WithStyles(Typography)>
        </div>,
        <div
          className="home-page-content"
        >
          <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>
        </div>,
      ],
      "className": "home-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoHideDuration": 3000,
          "message": "",
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>,
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>,
          ],
          "className": "title-bar",
          "data-aos": "fade-up",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <strong>
                LunchIn
              </strong>,
              "className": "title",
              "component": "h2",
              "style": Object {
                "color": "#000000",
              },
              "variant": "h1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "LunchIn",
              },
              "ref": null,
              "rendered": "LunchIn",
              "type": "strong",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Automatically Choose a Lunch Option For You",
              "className": "tag-line",
              "component": "h2",
              "data-aos": "fade-up",
              "variant": "h3",
            },
            "ref": null,
            "rendered": "Automatically Choose a Lunch Option For You",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
          "className": "home-page-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />,
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>,
            ],
            "className": "login-form",
            "data-aos": "slide-right",
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "login-form-header",
                "subheader": "Your Lunch Option Awaits",
                "title": "Sign In",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />,
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />,
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>,
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>,
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>,
                ],
                "className": "login-form-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "email",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "email",
                    "label": "E-mail",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "email",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "InputProps": Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    },
                    "className": "password",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "password",
                    "label": "Password",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "password",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-In",
                    "className": "login",
                    "color": "primary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-In",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Don't have an account? Signup now!",
                    "className": "signup-line",
                    "component": "h2",
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "subtitle1",
                  },
                  "ref": null,
                  "rendered": "Don't have an account? Signup now!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-Up",
                    "className": "login",
                    "color": "secondary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-Up",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(CssBaseline) />,
          <WithStyles(Snackbar)
            autoHideDuration={3000}
            message=""
            onClose={[Function]}
            open={false}
          />,
          <div
            className="title-bar"
            data-aos="fade-up"
          >
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>
          </div>,
          <div
            className="home-page-content"
          >
            <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>
          </div>,
        ],
        "className": "home-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoHideDuration": 3000,
            "message": "",
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="title"
                component="h2"
                style={
                  Object {
                    "color": "#000000",
                  }
                }
                variant="h1"
              >
                <strong>
                  LunchIn
                </strong>
              </WithStyles(Typography)>,
              <WithStyles(Typography)
                className="tag-line"
                component="h2"
                data-aos="fade-up"
                variant="h3"
              >
                Automatically Choose a Lunch Option For You
              </WithStyles(Typography)>,
            ],
            "className": "title-bar",
            "data-aos": "fade-up",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <strong>
                  LunchIn
                </strong>,
                "className": "title",
                "component": "h2",
                "style": Object {
                  "color": "#000000",
                },
                "variant": "h1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "LunchIn",
                },
                "ref": null,
                "rendered": "LunchIn",
                "type": "strong",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Automatically Choose a Lunch Option For You",
                "className": "tag-line",
                "component": "h2",
                "data-aos": "fade-up",
                "variant": "h3",
              },
              "ref": null,
              "rendered": "Automatically Choose a Lunch Option For You",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
            "className": "home-page-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                null,
                <WithStyles(CardHeader)
                  className="login-form-header"
                  subheader="Your Lunch Option Awaits"
                  title="Sign In"
                />,
                <WithStyles(CardContent)
                  className="login-form-content"
                >
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>
                </WithStyles(CardContent)>,
              ],
              "className": "login-form",
              "data-aos": "slide-right",
            },
            "ref": null,
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "login-form-header",
                  "subheader": "Your Lunch Option Awaits",
                  "title": "Sign In",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <TextField
                      className="email"
                      disabled={false}
                      fullWidth={true}
                      id="email"
                      label="E-mail"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="email"
                      value=""
                      variant="standard"
                    />,
                    <TextField
                      InputProps={
                        Object {
                          "endAdornment": <WithStyles(InputAdornment)
                            position="end"
                          >
                            <WithStyles(Tooltip)
                              placement="top"
                              title="Show Password"
                            >
                              <WithStyles(IconButton)
                                onClick={[Function]}
                              >
                                <pure(VisibilityOffIcon) />
                              </WithStyles(IconButton)>
                            </WithStyles(Tooltip)>
                          </WithStyles(InputAdornment)>,
                        }
                      }
                      className="password"
                      disabled={false}
                      fullWidth={true}
                      id="password"
                      label="Password"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="password"
                      value=""
                      variant="standard"
                    />,
                    <WithStyles(Button)
                      className="login"
                      color="primary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-In
                    </WithStyles(Button)>,
                    <WithStyles(Typography)
                      className="signup-line"
                      component="h2"
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="subtitle1"
                    >
                      Don't have an account? Signup now!
                    </WithStyles(Typography)>,
                    <WithStyles(Button)
                      className="login"
                      color="secondary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-Up
                    </WithStyles(Button)>,
                  ],
                  "className": "login-form-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "email",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "email",
                      "label": "E-mail",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "email",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "InputProps": Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      },
                      "className": "password",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "password",
                      "label": "Password",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "password",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-In",
                      "className": "login",
                      "color": "primary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-In",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Don't have an account? Signup now!",
                      "className": "signup-line",
                      "component": "h2",
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "subtitle1",
                    },
                    "ref": null,
                    "rendered": "Don't have an account? Signup now!",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-Up",
                      "className": "login",
                      "color": "secondary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-Up",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`When provided with no email for login Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    email=" "
    password="gerry123"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(CssBaseline) />,
        <WithStyles(Snackbar)
          autoHideDuration={3000}
          message=""
          onClose={[Function]}
          open={false}
        />,
        <div
          className="title-bar"
          data-aos="fade-up"
        >
          <WithStyles(Typography)
            className="title"
            component="h2"
            style={
              Object {
                "color": "#000000",
              }
            }
            variant="h1"
          >
            <strong>
              LunchIn
            </strong>
          </WithStyles(Typography)>
          <WithStyles(Typography)
            className="tag-line"
            component="h2"
            data-aos="fade-up"
            variant="h3"
          >
            Automatically Choose a Lunch Option For You
          </WithStyles(Typography)>
        </div>,
        <div
          className="home-page-content"
        >
          <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>
        </div>,
      ],
      "className": "home-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoHideDuration": 3000,
          "message": "",
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>,
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>,
          ],
          "className": "title-bar",
          "data-aos": "fade-up",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <strong>
                LunchIn
              </strong>,
              "className": "title",
              "component": "h2",
              "style": Object {
                "color": "#000000",
              },
              "variant": "h1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "LunchIn",
              },
              "ref": null,
              "rendered": "LunchIn",
              "type": "strong",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Automatically Choose a Lunch Option For You",
              "className": "tag-line",
              "component": "h2",
              "data-aos": "fade-up",
              "variant": "h3",
            },
            "ref": null,
            "rendered": "Automatically Choose a Lunch Option For You",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
          "className": "home-page-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />,
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>,
            ],
            "className": "login-form",
            "data-aos": "slide-right",
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "login-form-header",
                "subheader": "Your Lunch Option Awaits",
                "title": "Sign In",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />,
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />,
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>,
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>,
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>,
                ],
                "className": "login-form-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "email",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "email",
                    "label": "E-mail",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "email",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "InputProps": Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    },
                    "className": "password",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "password",
                    "label": "Password",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "password",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-In",
                    "className": "login",
                    "color": "primary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-In",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Don't have an account? Signup now!",
                    "className": "signup-line",
                    "component": "h2",
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "subtitle1",
                  },
                  "ref": null,
                  "rendered": "Don't have an account? Signup now!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-Up",
                    "className": "login",
                    "color": "secondary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-Up",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(CssBaseline) />,
          <WithStyles(Snackbar)
            autoHideDuration={3000}
            message=""
            onClose={[Function]}
            open={false}
          />,
          <div
            className="title-bar"
            data-aos="fade-up"
          >
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>
          </div>,
          <div
            className="home-page-content"
          >
            <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>
          </div>,
        ],
        "className": "home-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoHideDuration": 3000,
            "message": "",
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="title"
                component="h2"
                style={
                  Object {
                    "color": "#000000",
                  }
                }
                variant="h1"
              >
                <strong>
                  LunchIn
                </strong>
              </WithStyles(Typography)>,
              <WithStyles(Typography)
                className="tag-line"
                component="h2"
                data-aos="fade-up"
                variant="h3"
              >
                Automatically Choose a Lunch Option For You
              </WithStyles(Typography)>,
            ],
            "className": "title-bar",
            "data-aos": "fade-up",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <strong>
                  LunchIn
                </strong>,
                "className": "title",
                "component": "h2",
                "style": Object {
                  "color": "#000000",
                },
                "variant": "h1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "LunchIn",
                },
                "ref": null,
                "rendered": "LunchIn",
                "type": "strong",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Automatically Choose a Lunch Option For You",
                "className": "tag-line",
                "component": "h2",
                "data-aos": "fade-up",
                "variant": "h3",
              },
              "ref": null,
              "rendered": "Automatically Choose a Lunch Option For You",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
            "className": "home-page-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                null,
                <WithStyles(CardHeader)
                  className="login-form-header"
                  subheader="Your Lunch Option Awaits"
                  title="Sign In"
                />,
                <WithStyles(CardContent)
                  className="login-form-content"
                >
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>
                </WithStyles(CardContent)>,
              ],
              "className": "login-form",
              "data-aos": "slide-right",
            },
            "ref": null,
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "login-form-header",
                  "subheader": "Your Lunch Option Awaits",
                  "title": "Sign In",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <TextField
                      className="email"
                      disabled={false}
                      fullWidth={true}
                      id="email"
                      label="E-mail"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="email"
                      value=""
                      variant="standard"
                    />,
                    <TextField
                      InputProps={
                        Object {
                          "endAdornment": <WithStyles(InputAdornment)
                            position="end"
                          >
                            <WithStyles(Tooltip)
                              placement="top"
                              title="Show Password"
                            >
                              <WithStyles(IconButton)
                                onClick={[Function]}
                              >
                                <pure(VisibilityOffIcon) />
                              </WithStyles(IconButton)>
                            </WithStyles(Tooltip)>
                          </WithStyles(InputAdornment)>,
                        }
                      }
                      className="password"
                      disabled={false}
                      fullWidth={true}
                      id="password"
                      label="Password"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="password"
                      value=""
                      variant="standard"
                    />,
                    <WithStyles(Button)
                      className="login"
                      color="primary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-In
                    </WithStyles(Button)>,
                    <WithStyles(Typography)
                      className="signup-line"
                      component="h2"
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="subtitle1"
                    >
                      Don't have an account? Signup now!
                    </WithStyles(Typography)>,
                    <WithStyles(Button)
                      className="login"
                      color="secondary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-Up
                    </WithStyles(Button)>,
                  ],
                  "className": "login-form-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "email",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "email",
                      "label": "E-mail",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "email",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "InputProps": Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      },
                      "className": "password",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "password",
                      "label": "Password",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "password",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-In",
                      "className": "login",
                      "color": "primary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-In",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Don't have an account? Signup now!",
                      "className": "signup-line",
                      "component": "h2",
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "subtitle1",
                    },
                    "ref": null,
                    "rendered": "Don't have an account? Signup now!",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-Up",
                      "className": "login",
                      "color": "secondary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-Up",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`When provided with no email or password for login Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    email=""
    password=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(CssBaseline) />,
        <WithStyles(Snackbar)
          autoHideDuration={3000}
          message=""
          onClose={[Function]}
          open={false}
        />,
        <div
          className="title-bar"
          data-aos="fade-up"
        >
          <WithStyles(Typography)
            className="title"
            component="h2"
            style={
              Object {
                "color": "#000000",
              }
            }
            variant="h1"
          >
            <strong>
              LunchIn
            </strong>
          </WithStyles(Typography)>
          <WithStyles(Typography)
            className="tag-line"
            component="h2"
            data-aos="fade-up"
            variant="h3"
          >
            Automatically Choose a Lunch Option For You
          </WithStyles(Typography)>
        </div>,
        <div
          className="home-page-content"
        >
          <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>
        </div>,
      ],
      "className": "home-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoHideDuration": 3000,
          "message": "",
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>,
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>,
          ],
          "className": "title-bar",
          "data-aos": "fade-up",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <strong>
                LunchIn
              </strong>,
              "className": "title",
              "component": "h2",
              "style": Object {
                "color": "#000000",
              },
              "variant": "h1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "LunchIn",
              },
              "ref": null,
              "rendered": "LunchIn",
              "type": "strong",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Automatically Choose a Lunch Option For You",
              "className": "tag-line",
              "component": "h2",
              "data-aos": "fade-up",
              "variant": "h3",
            },
            "ref": null,
            "rendered": "Automatically Choose a Lunch Option For You",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
          "className": "home-page-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />,
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>,
            ],
            "className": "login-form",
            "data-aos": "slide-right",
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "login-form-header",
                "subheader": "Your Lunch Option Awaits",
                "title": "Sign In",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />,
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />,
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>,
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>,
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>,
                ],
                "className": "login-form-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "email",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "email",
                    "label": "E-mail",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "email",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "InputProps": Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    },
                    "className": "password",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "password",
                    "label": "Password",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "password",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-In",
                    "className": "login",
                    "color": "primary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-In",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Don't have an account? Signup now!",
                    "className": "signup-line",
                    "component": "h2",
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "subtitle1",
                  },
                  "ref": null,
                  "rendered": "Don't have an account? Signup now!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-Up",
                    "className": "login",
                    "color": "secondary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-Up",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(CssBaseline) />,
          <WithStyles(Snackbar)
            autoHideDuration={3000}
            message=""
            onClose={[Function]}
            open={false}
          />,
          <div
            className="title-bar"
            data-aos="fade-up"
          >
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>
          </div>,
          <div
            className="home-page-content"
          >
            <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>
          </div>,
        ],
        "className": "home-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoHideDuration": 3000,
            "message": "",
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="title"
                component="h2"
                style={
                  Object {
                    "color": "#000000",
                  }
                }
                variant="h1"
              >
                <strong>
                  LunchIn
                </strong>
              </WithStyles(Typography)>,
              <WithStyles(Typography)
                className="tag-line"
                component="h2"
                data-aos="fade-up"
                variant="h3"
              >
                Automatically Choose a Lunch Option For You
              </WithStyles(Typography)>,
            ],
            "className": "title-bar",
            "data-aos": "fade-up",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <strong>
                  LunchIn
                </strong>,
                "className": "title",
                "component": "h2",
                "style": Object {
                  "color": "#000000",
                },
                "variant": "h1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "LunchIn",
                },
                "ref": null,
                "rendered": "LunchIn",
                "type": "strong",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Automatically Choose a Lunch Option For You",
                "className": "tag-line",
                "component": "h2",
                "data-aos": "fade-up",
                "variant": "h3",
              },
              "ref": null,
              "rendered": "Automatically Choose a Lunch Option For You",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
            "className": "home-page-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                null,
                <WithStyles(CardHeader)
                  className="login-form-header"
                  subheader="Your Lunch Option Awaits"
                  title="Sign In"
                />,
                <WithStyles(CardContent)
                  className="login-form-content"
                >
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>
                </WithStyles(CardContent)>,
              ],
              "className": "login-form",
              "data-aos": "slide-right",
            },
            "ref": null,
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "login-form-header",
                  "subheader": "Your Lunch Option Awaits",
                  "title": "Sign In",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <TextField
                      className="email"
                      disabled={false}
                      fullWidth={true}
                      id="email"
                      label="E-mail"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="email"
                      value=""
                      variant="standard"
                    />,
                    <TextField
                      InputProps={
                        Object {
                          "endAdornment": <WithStyles(InputAdornment)
                            position="end"
                          >
                            <WithStyles(Tooltip)
                              placement="top"
                              title="Show Password"
                            >
                              <WithStyles(IconButton)
                                onClick={[Function]}
                              >
                                <pure(VisibilityOffIcon) />
                              </WithStyles(IconButton)>
                            </WithStyles(Tooltip)>
                          </WithStyles(InputAdornment)>,
                        }
                      }
                      className="password"
                      disabled={false}
                      fullWidth={true}
                      id="password"
                      label="Password"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="password"
                      value=""
                      variant="standard"
                    />,
                    <WithStyles(Button)
                      className="login"
                      color="primary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-In
                    </WithStyles(Button)>,
                    <WithStyles(Typography)
                      className="signup-line"
                      component="h2"
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="subtitle1"
                    >
                      Don't have an account? Signup now!
                    </WithStyles(Typography)>,
                    <WithStyles(Button)
                      className="login"
                      color="secondary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-Up
                    </WithStyles(Button)>,
                  ],
                  "className": "login-form-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "email",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "email",
                      "label": "E-mail",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "email",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "InputProps": Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      },
                      "className": "password",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "password",
                      "label": "Password",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "password",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-In",
                      "className": "login",
                      "color": "primary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-In",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Don't have an account? Signup now!",
                      "className": "signup-line",
                      "component": "h2",
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "subtitle1",
                    },
                    "ref": null,
                    "rendered": "Don't have an account? Signup now!",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-Up",
                      "className": "login",
                      "color": "secondary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-Up",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`When provided with no password for login Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    email="gerry@gmail.com"
    password=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(CssBaseline) />,
        <WithStyles(Snackbar)
          autoHideDuration={3000}
          message=""
          onClose={[Function]}
          open={false}
        />,
        <div
          className="title-bar"
          data-aos="fade-up"
        >
          <WithStyles(Typography)
            className="title"
            component="h2"
            style={
              Object {
                "color": "#000000",
              }
            }
            variant="h1"
          >
            <strong>
              LunchIn
            </strong>
          </WithStyles(Typography)>
          <WithStyles(Typography)
            className="tag-line"
            component="h2"
            data-aos="fade-up"
            variant="h3"
          >
            Automatically Choose a Lunch Option For You
          </WithStyles(Typography)>
        </div>,
        <div
          className="home-page-content"
        >
          <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>
        </div>,
      ],
      "className": "home-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoHideDuration": 3000,
          "message": "",
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>,
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>,
          ],
          "className": "title-bar",
          "data-aos": "fade-up",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <strong>
                LunchIn
              </strong>,
              "className": "title",
              "component": "h2",
              "style": Object {
                "color": "#000000",
              },
              "variant": "h1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "LunchIn",
              },
              "ref": null,
              "rendered": "LunchIn",
              "type": "strong",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Automatically Choose a Lunch Option For You",
              "className": "tag-line",
              "component": "h2",
              "data-aos": "fade-up",
              "variant": "h3",
            },
            "ref": null,
            "rendered": "Automatically Choose a Lunch Option For You",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
          "className": "home-page-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />,
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>,
            ],
            "className": "login-form",
            "data-aos": "slide-right",
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "login-form-header",
                "subheader": "Your Lunch Option Awaits",
                "title": "Sign In",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />,
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />,
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>,
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>,
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>,
                ],
                "className": "login-form-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "email",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "email",
                    "label": "E-mail",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "email",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "InputProps": Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    },
                    "className": "password",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "password",
                    "label": "Password",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "password",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-In",
                    "className": "login",
                    "color": "primary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-In",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Don't have an account? Signup now!",
                    "className": "signup-line",
                    "component": "h2",
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "subtitle1",
                  },
                  "ref": null,
                  "rendered": "Don't have an account? Signup now!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-Up",
                    "className": "login",
                    "color": "secondary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-Up",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(CssBaseline) />,
          <WithStyles(Snackbar)
            autoHideDuration={3000}
            message=""
            onClose={[Function]}
            open={false}
          />,
          <div
            className="title-bar"
            data-aos="fade-up"
          >
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>
          </div>,
          <div
            className="home-page-content"
          >
            <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>
          </div>,
        ],
        "className": "home-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoHideDuration": 3000,
            "message": "",
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="title"
                component="h2"
                style={
                  Object {
                    "color": "#000000",
                  }
                }
                variant="h1"
              >
                <strong>
                  LunchIn
                </strong>
              </WithStyles(Typography)>,
              <WithStyles(Typography)
                className="tag-line"
                component="h2"
                data-aos="fade-up"
                variant="h3"
              >
                Automatically Choose a Lunch Option For You
              </WithStyles(Typography)>,
            ],
            "className": "title-bar",
            "data-aos": "fade-up",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <strong>
                  LunchIn
                </strong>,
                "className": "title",
                "component": "h2",
                "style": Object {
                  "color": "#000000",
                },
                "variant": "h1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "LunchIn",
                },
                "ref": null,
                "rendered": "LunchIn",
                "type": "strong",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Automatically Choose a Lunch Option For You",
                "className": "tag-line",
                "component": "h2",
                "data-aos": "fade-up",
                "variant": "h3",
              },
              "ref": null,
              "rendered": "Automatically Choose a Lunch Option For You",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
            "className": "home-page-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                null,
                <WithStyles(CardHeader)
                  className="login-form-header"
                  subheader="Your Lunch Option Awaits"
                  title="Sign In"
                />,
                <WithStyles(CardContent)
                  className="login-form-content"
                >
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>
                </WithStyles(CardContent)>,
              ],
              "className": "login-form",
              "data-aos": "slide-right",
            },
            "ref": null,
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "login-form-header",
                  "subheader": "Your Lunch Option Awaits",
                  "title": "Sign In",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <TextField
                      className="email"
                      disabled={false}
                      fullWidth={true}
                      id="email"
                      label="E-mail"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="email"
                      value=""
                      variant="standard"
                    />,
                    <TextField
                      InputProps={
                        Object {
                          "endAdornment": <WithStyles(InputAdornment)
                            position="end"
                          >
                            <WithStyles(Tooltip)
                              placement="top"
                              title="Show Password"
                            >
                              <WithStyles(IconButton)
                                onClick={[Function]}
                              >
                                <pure(VisibilityOffIcon) />
                              </WithStyles(IconButton)>
                            </WithStyles(Tooltip)>
                          </WithStyles(InputAdornment)>,
                        }
                      }
                      className="password"
                      disabled={false}
                      fullWidth={true}
                      id="password"
                      label="Password"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="password"
                      value=""
                      variant="standard"
                    />,
                    <WithStyles(Button)
                      className="login"
                      color="primary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-In
                    </WithStyles(Button)>,
                    <WithStyles(Typography)
                      className="signup-line"
                      component="h2"
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="subtitle1"
                    >
                      Don't have an account? Signup now!
                    </WithStyles(Typography)>,
                    <WithStyles(Button)
                      className="login"
                      color="secondary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-Up
                    </WithStyles(Button)>,
                  ],
                  "className": "login-form-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "email",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "email",
                      "label": "E-mail",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "email",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "InputProps": Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      },
                      "className": "password",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "password",
                      "label": "Password",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "password",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-In",
                      "className": "login",
                      "color": "primary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-In",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Don't have an account? Signup now!",
                      "className": "signup-line",
                      "component": "h2",
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "subtitle1",
                    },
                    "ref": null,
                    "rendered": "Don't have an account? Signup now!",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-Up",
                      "className": "login",
                      "color": "secondary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-Up",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`When provided with user login info Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    email="gerry@gmail.com"
    password="gerry123"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(CssBaseline) />,
        <WithStyles(Snackbar)
          autoHideDuration={3000}
          message=""
          onClose={[Function]}
          open={false}
        />,
        <div
          className="title-bar"
          data-aos="fade-up"
        >
          <WithStyles(Typography)
            className="title"
            component="h2"
            style={
              Object {
                "color": "#000000",
              }
            }
            variant="h1"
          >
            <strong>
              LunchIn
            </strong>
          </WithStyles(Typography)>
          <WithStyles(Typography)
            className="tag-line"
            component="h2"
            data-aos="fade-up"
            variant="h3"
          >
            Automatically Choose a Lunch Option For You
          </WithStyles(Typography)>
        </div>,
        <div
          className="home-page-content"
        >
          <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>
        </div>,
      ],
      "className": "home-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoHideDuration": 3000,
          "message": "",
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>,
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>,
          ],
          "className": "title-bar",
          "data-aos": "fade-up",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <strong>
                LunchIn
              </strong>,
              "className": "title",
              "component": "h2",
              "style": Object {
                "color": "#000000",
              },
              "variant": "h1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "LunchIn",
              },
              "ref": null,
              "rendered": "LunchIn",
              "type": "strong",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Automatically Choose a Lunch Option For You",
              "className": "tag-line",
              "component": "h2",
              "data-aos": "fade-up",
              "variant": "h3",
            },
            "ref": null,
            "rendered": "Automatically Choose a Lunch Option For You",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Card)
            className="login-form"
            data-aos="slide-right"
          >
            <WithStyles(CardHeader)
              className="login-form-header"
              subheader="Your Lunch Option Awaits"
              title="Sign In"
            />
            <WithStyles(CardContent)
              className="login-form-content"
            >
              <TextField
                className="email"
                disabled={false}
                fullWidth={true}
                id="email"
                label="E-mail"
                onChange={[Function]}
                required={true}
                select={false}
                type="email"
                value=""
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(InputAdornment)
                      position="end"
                    >
                      <WithStyles(Tooltip)
                        placement="top"
                        title="Show Password"
                      >
                        <WithStyles(IconButton)
                          onClick={[Function]}
                        >
                          <pure(VisibilityOffIcon) />
                        </WithStyles(IconButton)>
                      </WithStyles(Tooltip)>
                    </WithStyles(InputAdornment)>,
                  }
                }
                className="password"
                disabled={false}
                fullWidth={true}
                id="password"
                label="Password"
                onChange={[Function]}
                required={true}
                select={false}
                type="password"
                value=""
                variant="standard"
              />
              <WithStyles(Button)
                className="login"
                color="primary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-In
              </WithStyles(Button)>
              <WithStyles(Typography)
                className="signup-line"
                component="h2"
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="subtitle1"
              >
                Don't have an account? Signup now!
              </WithStyles(Typography)>
              <WithStyles(Button)
                className="login"
                color="secondary"
                disabled={false}
                fullWidth={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  }
                }
                variant="contained"
              >
                Sign-Up
              </WithStyles(Button)>
            </WithStyles(CardContent)>
          </WithStyles(Card)>,
          "className": "home-page-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />,
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>,
            ],
            "className": "login-form",
            "data-aos": "slide-right",
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "login-form-header",
                "subheader": "Your Lunch Option Awaits",
                "title": "Sign In",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />,
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />,
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>,
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>,
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>,
                ],
                "className": "login-form-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "email",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "email",
                    "label": "E-mail",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "email",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "InputProps": Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    },
                    "className": "password",
                    "disabled": false,
                    "fullWidth": true,
                    "id": "password",
                    "label": "Password",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "password",
                    "value": "",
                    "variant": "standard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-In",
                    "className": "login",
                    "color": "primary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-In",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Don't have an account? Signup now!",
                    "className": "signup-line",
                    "component": "h2",
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "subtitle1",
                  },
                  "ref": null,
                  "rendered": "Don't have an account? Signup now!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign-Up",
                    "className": "login",
                    "color": "secondary",
                    "disabled": false,
                    "fullWidth": true,
                    "onClick": [Function],
                    "style": Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    },
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Sign-Up",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(CssBaseline) />,
          <WithStyles(Snackbar)
            autoHideDuration={3000}
            message=""
            onClose={[Function]}
            open={false}
          />,
          <div
            className="title-bar"
            data-aos="fade-up"
          >
            <WithStyles(Typography)
              className="title"
              component="h2"
              style={
                Object {
                  "color": "#000000",
                }
              }
              variant="h1"
            >
              <strong>
                LunchIn
              </strong>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              className="tag-line"
              component="h2"
              data-aos="fade-up"
              variant="h3"
            >
              Automatically Choose a Lunch Option For You
            </WithStyles(Typography)>
          </div>,
          <div
            className="home-page-content"
          >
            <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>
          </div>,
        ],
        "className": "home-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoHideDuration": 3000,
            "message": "",
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="title"
                component="h2"
                style={
                  Object {
                    "color": "#000000",
                  }
                }
                variant="h1"
              >
                <strong>
                  LunchIn
                </strong>
              </WithStyles(Typography)>,
              <WithStyles(Typography)
                className="tag-line"
                component="h2"
                data-aos="fade-up"
                variant="h3"
              >
                Automatically Choose a Lunch Option For You
              </WithStyles(Typography)>,
            ],
            "className": "title-bar",
            "data-aos": "fade-up",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <strong>
                  LunchIn
                </strong>,
                "className": "title",
                "component": "h2",
                "style": Object {
                  "color": "#000000",
                },
                "variant": "h1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "LunchIn",
                },
                "ref": null,
                "rendered": "LunchIn",
                "type": "strong",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Automatically Choose a Lunch Option For You",
                "className": "tag-line",
                "component": "h2",
                "data-aos": "fade-up",
                "variant": "h3",
              },
              "ref": null,
              "rendered": "Automatically Choose a Lunch Option For You",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Card)
              className="login-form"
              data-aos="slide-right"
            >
              <WithStyles(CardHeader)
                className="login-form-header"
                subheader="Your Lunch Option Awaits"
                title="Sign In"
              />
              <WithStyles(CardContent)
                className="login-form-content"
              >
                <TextField
                  className="email"
                  disabled={false}
                  fullWidth={true}
                  id="email"
                  label="E-mail"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="email"
                  value=""
                  variant="standard"
                />
                <TextField
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(InputAdornment)
                        position="end"
                      >
                        <WithStyles(Tooltip)
                          placement="top"
                          title="Show Password"
                        >
                          <WithStyles(IconButton)
                            onClick={[Function]}
                          >
                            <pure(VisibilityOffIcon) />
                          </WithStyles(IconButton)>
                        </WithStyles(Tooltip)>
                      </WithStyles(InputAdornment)>,
                    }
                  }
                  className="password"
                  disabled={false}
                  fullWidth={true}
                  id="password"
                  label="Password"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                />
                <WithStyles(Button)
                  className="login"
                  color="primary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-In
                </WithStyles(Button)>
                <WithStyles(Typography)
                  className="signup-line"
                  component="h2"
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="subtitle1"
                >
                  Don't have an account? Signup now!
                </WithStyles(Typography)>
                <WithStyles(Button)
                  className="login"
                  color="secondary"
                  disabled={false}
                  fullWidth={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "marginBottom": 5,
                      "marginTop": 5,
                    }
                  }
                  variant="contained"
                >
                  Sign-Up
                </WithStyles(Button)>
              </WithStyles(CardContent)>
            </WithStyles(Card)>,
            "className": "home-page-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                null,
                <WithStyles(CardHeader)
                  className="login-form-header"
                  subheader="Your Lunch Option Awaits"
                  title="Sign In"
                />,
                <WithStyles(CardContent)
                  className="login-form-content"
                >
                  <TextField
                    className="email"
                    disabled={false}
                    fullWidth={true}
                    id="email"
                    label="E-mail"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="email"
                    value=""
                    variant="standard"
                  />
                  <TextField
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      }
                    }
                    className="password"
                    disabled={false}
                    fullWidth={true}
                    id="password"
                    label="Password"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="password"
                    value=""
                    variant="standard"
                  />
                  <WithStyles(Button)
                    className="login"
                    color="primary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-In
                  </WithStyles(Button)>
                  <WithStyles(Typography)
                    className="signup-line"
                    component="h2"
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="subtitle1"
                  >
                    Don't have an account? Signup now!
                  </WithStyles(Typography)>
                  <WithStyles(Button)
                    className="login"
                    color="secondary"
                    disabled={false}
                    fullWidth={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      }
                    }
                    variant="contained"
                  >
                    Sign-Up
                  </WithStyles(Button)>
                </WithStyles(CardContent)>,
              ],
              "className": "login-form",
              "data-aos": "slide-right",
            },
            "ref": null,
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "login-form-header",
                  "subheader": "Your Lunch Option Awaits",
                  "title": "Sign In",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <TextField
                      className="email"
                      disabled={false}
                      fullWidth={true}
                      id="email"
                      label="E-mail"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="email"
                      value=""
                      variant="standard"
                    />,
                    <TextField
                      InputProps={
                        Object {
                          "endAdornment": <WithStyles(InputAdornment)
                            position="end"
                          >
                            <WithStyles(Tooltip)
                              placement="top"
                              title="Show Password"
                            >
                              <WithStyles(IconButton)
                                onClick={[Function]}
                              >
                                <pure(VisibilityOffIcon) />
                              </WithStyles(IconButton)>
                            </WithStyles(Tooltip)>
                          </WithStyles(InputAdornment)>,
                        }
                      }
                      className="password"
                      disabled={false}
                      fullWidth={true}
                      id="password"
                      label="Password"
                      onChange={[Function]}
                      required={true}
                      select={false}
                      type="password"
                      value=""
                      variant="standard"
                    />,
                    <WithStyles(Button)
                      className="login"
                      color="primary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-In
                    </WithStyles(Button)>,
                    <WithStyles(Typography)
                      className="signup-line"
                      component="h2"
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="subtitle1"
                    >
                      Don't have an account? Signup now!
                    </WithStyles(Typography)>,
                    <WithStyles(Button)
                      className="login"
                      color="secondary"
                      disabled={false}
                      fullWidth={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginBottom": 5,
                          "marginTop": 5,
                        }
                      }
                      variant="contained"
                    >
                      Sign-Up
                    </WithStyles(Button)>,
                  ],
                  "className": "login-form-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "email",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "email",
                      "label": "E-mail",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "email",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "InputProps": Object {
                        "endAdornment": <WithStyles(InputAdornment)
                          position="end"
                        >
                          <WithStyles(Tooltip)
                            placement="top"
                            title="Show Password"
                          >
                            <WithStyles(IconButton)
                              onClick={[Function]}
                            >
                              <pure(VisibilityOffIcon) />
                            </WithStyles(IconButton)>
                          </WithStyles(Tooltip)>
                        </WithStyles(InputAdornment)>,
                      },
                      "className": "password",
                      "disabled": false,
                      "fullWidth": true,
                      "id": "password",
                      "label": "Password",
                      "onChange": [Function],
                      "required": true,
                      "select": false,
                      "type": "password",
                      "value": "",
                      "variant": "standard",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-In",
                      "className": "login",
                      "color": "primary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-In",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Don't have an account? Signup now!",
                      "className": "signup-line",
                      "component": "h2",
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "subtitle1",
                    },
                    "ref": null,
                    "rendered": "Don't have an account? Signup now!",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Sign-Up",
                      "className": "login",
                      "color": "secondary",
                      "disabled": false,
                      "fullWidth": true,
                      "onClick": [Function],
                      "style": Object {
                        "marginBottom": 5,
                        "marginTop": 5,
                      },
                      "variant": "contained",
                    },
                    "ref": null,
                    "rendered": "Sign-Up",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
