// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signup Component Should render correctly with correct path 1`] = `null`;

exports[`Signup Component When provided with empty address info Should render correctly 1`] = `
<div
  className="signup-page"
>
  <WithStyles(CssBaseline) />
  <WithStyles(Snackbar)
    autoHideDuration={6000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    className="signup-title-bar"
  >
    <WithStyles(Typography)
      component="h2"
      variant="h3"
    >
      LunchIn | Sign-Up
    </WithStyles(Typography)>
    <WithStyles(Typography)
      component="h2"
      variant="subtitle1"
    >
      Fill out the form below to sign-up for an account.
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <div>
    <WithStyles(Card)
      className="signup-page-content"
      data-aos="slide-up"
      style={
        Object {
          "marginTop": "5px",
        }
      }
    >
      <WithStyles(CardHeader)
        subheader="What we need to get started"
        title="Essentials"
      />
      <WithStyles(CardContent)>
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="name"
          label="Full Name"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="email"
          label="E-Mail"
          onChange={[Function]}
          required={true}
          select={false}
          type="email"
          value=""
          variant="standard"
        />
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="address"
          label="Full Address"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />
        <TextField
          InputProps={
            Object {
              "endAdornment": <WithStyles(InputAdornment)
                position="end"
              >
                <WithStyles(Tooltip)
                  placement="top"
                  title="Show Password"
                >
                  <WithStyles(IconButton)
                    onClick={[Function]}
                  >
                    <pure(VisibilityOffIcon) />
                  </WithStyles(IconButton)>
                </WithStyles(Tooltip)>
              </WithStyles(InputAdornment)>,
            }
          }
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="password"
          label="Password"
          onChange={[Function]}
          required={true}
          select={false}
          type="password"
          value=""
          variant="standard"
        />
        <WithStyles(Button)
          className="push-down"
          color="primary"
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          <pure(CheckCircleIcon)
            style={
              Object {
                "marginRight": "10px",
              }
            }
          />
          Sign Up
        </WithStyles(Button)>
        <WithStyles(Button)
          className="push-down"
          color="default"
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="outlined"
        >
          Already have an account? Sign in here!
        </WithStyles(Button)>
      </WithStyles(CardContent)>
    </WithStyles(Card)>
  </div>
</div>
`;

exports[`Signup Component When provided with invalid address info Should render correctly 1`] = `
<div
  className="signup-page"
>
  <WithStyles(CssBaseline) />
  <WithStyles(Snackbar)
    autoHideDuration={6000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    className="signup-title-bar"
  >
    <WithStyles(Typography)
      component="h2"
      variant="h3"
    >
      LunchIn | Sign-Up
    </WithStyles(Typography)>
    <WithStyles(Typography)
      component="h2"
      variant="subtitle1"
    >
      Fill out the form below to sign-up for an account.
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <div>
    <WithStyles(Card)
      className="signup-page-content"
      data-aos="slide-up"
      style={
        Object {
          "marginTop": "5px",
        }
      }
    >
      <WithStyles(CardHeader)
        subheader="What we need to get started"
        title="Essentials"
      />
      <WithStyles(CardContent)>
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="name"
          label="Full Name"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="email"
          label="E-Mail"
          onChange={[Function]}
          required={true}
          select={false}
          type="email"
          value=""
          variant="standard"
        />
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="address"
          label="Full Address"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />
        <TextField
          InputProps={
            Object {
              "endAdornment": <WithStyles(InputAdornment)
                position="end"
              >
                <WithStyles(Tooltip)
                  placement="top"
                  title="Show Password"
                >
                  <WithStyles(IconButton)
                    onClick={[Function]}
                  >
                    <pure(VisibilityOffIcon) />
                  </WithStyles(IconButton)>
                </WithStyles(Tooltip)>
              </WithStyles(InputAdornment)>,
            }
          }
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="password"
          label="Password"
          onChange={[Function]}
          required={true}
          select={false}
          type="password"
          value=""
          variant="standard"
        />
        <WithStyles(Button)
          className="push-down"
          color="primary"
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          <pure(CheckCircleIcon)
            style={
              Object {
                "marginRight": "10px",
              }
            }
          />
          Sign Up
        </WithStyles(Button)>
        <WithStyles(Button)
          className="push-down"
          color="default"
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="outlined"
        >
          Already have an account? Sign in here!
        </WithStyles(Button)>
      </WithStyles(CardContent)>
    </WithStyles(Card)>
  </div>
</div>
`;

exports[`Signup Component When provided with missing user info Should render correctly 1`] = `
<div
  className="signup-page"
>
  <WithStyles(CssBaseline) />
  <WithStyles(Snackbar)
    autoHideDuration={6000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    className="signup-title-bar"
  >
    <WithStyles(Typography)
      component="h2"
      variant="h3"
    >
      LunchIn | Sign-Up
    </WithStyles(Typography)>
    <WithStyles(Typography)
      component="h2"
      variant="subtitle1"
    >
      Fill out the form below to sign-up for an account.
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <div>
    <WithStyles(Card)
      className="signup-page-content"
      data-aos="slide-up"
      style={
        Object {
          "marginTop": "5px",
        }
      }
    >
      <WithStyles(CardHeader)
        subheader="What we need to get started"
        title="Essentials"
      />
      <WithStyles(CardContent)>
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="name"
          label="Full Name"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="email"
          label="E-Mail"
          onChange={[Function]}
          required={true}
          select={false}
          type="email"
          value=""
          variant="standard"
        />
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="address"
          label="Full Address"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />
        <TextField
          InputProps={
            Object {
              "endAdornment": <WithStyles(InputAdornment)
                position="end"
              >
                <WithStyles(Tooltip)
                  placement="top"
                  title="Show Password"
                >
                  <WithStyles(IconButton)
                    onClick={[Function]}
                  >
                    <pure(VisibilityOffIcon) />
                  </WithStyles(IconButton)>
                </WithStyles(Tooltip)>
              </WithStyles(InputAdornment)>,
            }
          }
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="password"
          label="Password"
          onChange={[Function]}
          required={true}
          select={false}
          type="password"
          value=""
          variant="standard"
        />
        <WithStyles(Button)
          className="push-down"
          color="primary"
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          <pure(CheckCircleIcon)
            style={
              Object {
                "marginRight": "10px",
              }
            }
          />
          Sign Up
        </WithStyles(Button)>
        <WithStyles(Button)
          className="push-down"
          color="default"
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="outlined"
        >
          Already have an account? Sign in here!
        </WithStyles(Button)>
      </WithStyles(CardContent)>
    </WithStyles(Card)>
  </div>
</div>
`;

exports[`Signup Component When provided with user info Should render correctly 1`] = `
<div
  className="signup-page"
>
  <WithStyles(CssBaseline) />
  <WithStyles(Snackbar)
    autoHideDuration={6000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    className="signup-title-bar"
  >
    <WithStyles(Typography)
      component="h2"
      variant="h3"
    >
      LunchIn | Sign-Up
    </WithStyles(Typography)>
    <WithStyles(Typography)
      component="h2"
      variant="subtitle1"
    >
      Fill out the form below to sign-up for an account.
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <div>
    <WithStyles(Card)
      className="signup-page-content"
      data-aos="slide-up"
      style={
        Object {
          "marginTop": "5px",
        }
      }
    >
      <WithStyles(CardHeader)
        subheader="What we need to get started"
        title="Essentials"
      />
      <WithStyles(CardContent)>
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="name"
          label="Full Name"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="email"
          label="E-Mail"
          onChange={[Function]}
          required={true}
          select={false}
          type="email"
          value=""
          variant="standard"
        />
        <TextField
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="address"
          label="Full Address"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />
        <TextField
          InputProps={
            Object {
              "endAdornment": <WithStyles(InputAdornment)
                position="end"
              >
                <WithStyles(Tooltip)
                  placement="top"
                  title="Show Password"
                >
                  <WithStyles(IconButton)
                    onClick={[Function]}
                  >
                    <pure(VisibilityOffIcon) />
                  </WithStyles(IconButton)>
                </WithStyles(Tooltip)>
              </WithStyles(InputAdornment)>,
            }
          }
          className="push-down"
          disabled={false}
          fullWidth={true}
          id="password"
          label="Password"
          onChange={[Function]}
          required={true}
          select={false}
          type="password"
          value=""
          variant="standard"
        />
        <WithStyles(Button)
          className="push-down"
          color="primary"
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          <pure(CheckCircleIcon)
            style={
              Object {
                "marginRight": "10px",
              }
            }
          />
          Sign Up
        </WithStyles(Button)>
        <WithStyles(Button)
          className="push-down"
          color="default"
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="outlined"
        >
          Already have an account? Sign in here!
        </WithStyles(Button)>
      </WithStyles(CardContent)>
    </WithStyles(Card)>
  </div>
</div>
`;
