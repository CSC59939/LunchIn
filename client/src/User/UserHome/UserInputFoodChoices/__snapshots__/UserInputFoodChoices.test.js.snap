// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserInputFoodChoices Component converts mount wrapper correctly 1`] = `
<WithStyles(Card)
  className="input-paper"
  data-aos="zoom-in-up"
>
  <WithStyles(CardHeader)
    title="Please enter your food choices:"
  />
  <WithStyles(CardContent)>
    <WithStyles(Snackbar)
      autoHideDuration={6000}
      message=""
      onClose={[Function]}
      open={false}
    />
    <TextField
      className="addFoodChoice"
      fullWidth={true}
      inputProps={
        Object {
          "id": "input-food-choices",
          "maxLength": 20,
          "style": Object {
            "textAlign": "center",
          },
        }
      }
      name="inputFoodName"
      onChange={[Function]}
      placeholder="Food name"
      required={true}
      select={false}
      value=""
      variant="standard"
    />
    <WithStyles(Button)
      className="input-button"
      color="primary"
      disabled={true}
      id="foodSubmit"
      onClick={[Function]}
      style={
        Object {
          "marginBottom": 5,
          "marginTop": 10,
        }
      }
      variant="contained"
    >
      Add Food
    </WithStyles(Button)>
    <div>
      <WithStyles(Grid)
        container={true}
        item={true}
        spacing={0}
        xs={12}
      >
        <WithStyles(Grid)
          item={true}
          xs={3}
        >
          <WithStyles(Paper)
            className="food-list"
          >
            <WithStyles(List)
              style={
                Object {
                  "backgroundColor": "white",
                  "height": "70vh",
                  "overflow": "auto",
                  "padding": 0,
                  "position": "relative",
                }
              }
            >
              <WithStyles(ListSubheader)
                style={
                  Object {
                    "backgroundColor": "inherit",
                  }
                }
              >
                Food Name
              </WithStyles(ListSubheader)>
            </WithStyles(List)>
          </WithStyles(Paper)>
          <WithStyles(Button)
            className="input-button-2"
            color="secondary"
            disabled={true}
            onClick={[Function]}
            style={
              Object {
                "marginBottom": 5,
                "marginTop": 10,
              }
            }
            value=""
            variant="contained"
          >
            Generate Random Food
          </WithStyles(Button)>
          <div
            className="random-food-section"
          >
            <WithStyles(Typography)
              component="h2"
              variant="subtitle1"
            />
          </div>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={9}
        >
          <WithStyles(Paper) />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </div>
  </WithStyles(CardContent)>
</WithStyles(Card)>
`;

exports[`UserInputFoodChoices Component converts render wrapper correctly 1`] = `null`;

exports[`UserInputFoodChoices Component converts shallow wrapper correctly 1`] = `
<WithStyles(Card)
  className="input-paper"
  data-aos="zoom-in-up"
>
  <WithStyles(CardHeader)
    title="Please enter your food choices:"
  />
  <WithStyles(CardContent)>
    <WithStyles(Snackbar)
      autoHideDuration={6000}
      message=""
      onClose={[Function]}
      open={false}
    />
    <TextField
      className="addFoodChoice"
      fullWidth={true}
      inputProps={
        Object {
          "id": "input-food-choices",
          "maxLength": 20,
          "style": Object {
            "textAlign": "center",
          },
        }
      }
      name="inputFoodName"
      onChange={[Function]}
      placeholder="Food name"
      required={true}
      select={false}
      value=""
      variant="standard"
    />
    <WithStyles(Button)
      className="input-button"
      color="primary"
      disabled={true}
      id="foodSubmit"
      onClick={[Function]}
      style={
        Object {
          "marginBottom": 5,
          "marginTop": 10,
        }
      }
      variant="contained"
    >
      Add Food
    </WithStyles(Button)>
    <div>
      <WithStyles(Grid)
        container={true}
        item={true}
        spacing={0}
        xs={12}
      >
        <WithStyles(Grid)
          item={true}
          xs={3}
        >
          <WithStyles(Paper)
            className="food-list"
          >
            <WithStyles(List)
              style={
                Object {
                  "backgroundColor": "white",
                  "height": "70vh",
                  "overflow": "auto",
                  "padding": 0,
                  "position": "relative",
                }
              }
            >
              <WithStyles(ListSubheader)
                style={
                  Object {
                    "backgroundColor": "inherit",
                  }
                }
              >
                Food Name
              </WithStyles(ListSubheader)>
            </WithStyles(List)>
          </WithStyles(Paper)>
          <WithStyles(Button)
            className="input-button-2"
            color="secondary"
            disabled={true}
            onClick={[Function]}
            style={
              Object {
                "marginBottom": 5,
                "marginTop": 10,
              }
            }
            value=""
            variant="contained"
          >
            Generate Random Food
          </WithStyles(Button)>
          <div
            className="random-food-section"
          >
            <WithStyles(Typography)
              component="h2"
              variant="subtitle1"
            />
          </div>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={9}
        >
          <WithStyles(Paper) />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </div>
  </WithStyles(CardContent)>
</WithStyles(Card)>
`;

exports[`UserInputFoodChoices Component renders UserInputFoodChoices Component correctly 1`] = `
<WithStyles(Card)
  className="input-paper"
  data-aos="zoom-in-up"
>
  <WithStyles(CardHeader)
    title="Please enter your food choices:"
  />
  <WithStyles(CardContent)>
    <WithStyles(Snackbar)
      autoHideDuration={6000}
      message=""
      onClose={[Function]}
      open={false}
    />
    <TextField
      className="addFoodChoice"
      fullWidth={true}
      inputProps={
        Object {
          "id": "input-food-choices",
          "maxLength": 20,
          "style": Object {
            "textAlign": "center",
          },
        }
      }
      name="inputFoodName"
      onChange={[Function]}
      placeholder="Food name"
      required={true}
      select={false}
      value=""
      variant="standard"
    />
    <WithStyles(Button)
      className="input-button"
      color="primary"
      disabled={true}
      id="foodSubmit"
      onClick={[Function]}
      style={
        Object {
          "marginBottom": 5,
          "marginTop": 10,
        }
      }
      variant="contained"
    >
      Add Food
    </WithStyles(Button)>
    <div>
      <WithStyles(Grid)
        container={true}
        item={true}
        spacing={0}
        xs={12}
      >
        <WithStyles(Grid)
          item={true}
          xs={3}
        >
          <WithStyles(Paper)
            className="food-list"
          >
            <WithStyles(List)
              style={
                Object {
                  "backgroundColor": "white",
                  "height": "70vh",
                  "overflow": "auto",
                  "padding": 0,
                  "position": "relative",
                }
              }
            >
              <WithStyles(ListSubheader)
                style={
                  Object {
                    "backgroundColor": "inherit",
                  }
                }
              >
                Food Name
              </WithStyles(ListSubheader)>
            </WithStyles(List)>
          </WithStyles(Paper)>
          <WithStyles(Button)
            className="input-button-2"
            color="secondary"
            disabled={true}
            onClick={[Function]}
            style={
              Object {
                "marginBottom": 5,
                "marginTop": 10,
              }
            }
            value=""
            variant="contained"
          >
            Generate Random Food
          </WithStyles(Button)>
          <div
            className="random-food-section"
          >
            <WithStyles(Typography)
              component="h2"
              variant="subtitle1"
            />
          </div>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={9}
        >
          <WithStyles(Paper) />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </div>
  </WithStyles(CardContent)>
</WithStyles(Card)>
`;

exports[`UserInputFoodChoices Component should render UserInputFoodChoices with inputs food. 1`] = `
<WithStyles(Card)
  className="input-paper"
  data-aos="zoom-in-up"
>
  <WithStyles(CardHeader)
    title="Please enter your food choices:"
  />
  <WithStyles(CardContent)>
    <WithStyles(Snackbar)
      autoHideDuration={6000}
      message=""
      onClose={[Function]}
      open={false}
    />
    <TextField
      className="addFoodChoice"
      fullWidth={true}
      inputProps={
        Object {
          "id": "input-food-choices",
          "maxLength": 20,
          "style": Object {
            "textAlign": "center",
          },
        }
      }
      name="inputFoodName"
      onChange={[Function]}
      placeholder="Food name"
      required={true}
      select={false}
      value=""
      variant="standard"
    />
    <WithStyles(Button)
      className="input-button"
      color="primary"
      disabled={true}
      id="foodSubmit"
      onClick={[Function]}
      style={
        Object {
          "marginBottom": 5,
          "marginTop": 10,
        }
      }
      variant="contained"
    >
      Add Food
    </WithStyles(Button)>
    <div>
      <WithStyles(Grid)
        container={true}
        item={true}
        spacing={0}
        xs={12}
      >
        <WithStyles(Grid)
          item={true}
          xs={3}
        >
          <WithStyles(Paper)
            className="food-list"
          >
            <WithStyles(List)
              style={
                Object {
                  "backgroundColor": "white",
                  "height": "70vh",
                  "overflow": "auto",
                  "padding": 0,
                  "position": "relative",
                }
              }
            >
              <WithStyles(ListSubheader)
                style={
                  Object {
                    "backgroundColor": "inherit",
                  }
                }
              >
                Food Name
              </WithStyles(ListSubheader)>
            </WithStyles(List)>
          </WithStyles(Paper)>
          <WithStyles(Button)
            className="input-button-2"
            color="secondary"
            disabled={true}
            onClick={[Function]}
            style={
              Object {
                "marginBottom": 5,
                "marginTop": 10,
              }
            }
            value=""
            variant="contained"
          >
            Generate Random Food
          </WithStyles(Button)>
          <div
            className="random-food-section"
          >
            <WithStyles(Typography)
              component="h2"
              variant="subtitle1"
            />
          </div>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={9}
        >
          <WithStyles(Paper) />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </div>
  </WithStyles(CardContent)>
</WithStyles(Card)>
`;
