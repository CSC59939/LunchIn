// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserProfile Component When provided with address info Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;

exports[`UserProfile Component When provided with correct current password and new password Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;

exports[`UserProfile Component When provided with correct email and new email Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;

exports[`UserProfile Component When provided with empty address info Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;

exports[`UserProfile Component When provided with incorrect email and new email Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;

exports[`UserProfile Component When provided with invalid address info Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;

exports[`UserProfile Component When provided with no props Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;

exports[`UserProfile Component When provided with wrong c.urrent password and no new password Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;

exports[`UserProfile Component When provided with wrong current password and no new password Should render correctly 1`] = `
<div
  style={
    Object {
      "padding": "3.5% 18.5%",
    }
  }
>
  <WithStyles(CssBaseline) />
  <div
    className="user-header"
  >
    <WithStyles(Typography)
      component="h2"
      style={
        Object {
          "flex": 1,
        }
      }
      variant="h3"
    >
      's Profile
      <WithStyles(Button)
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
      >
        <pure(ArrowBackIcon) />
        Back
      </WithStyles(Button)>
    </WithStyles(Typography)>
  </div>
  <WithStyles(Divider) />
  <WithStyles(Snackbar)
    autoHideDuration={3000}
    message=""
    onClose={[Function]}
    open={false}
  />
  <div
    style={
      Object {
        "marginLeft": "15%",
        "marginRight": "15%",
      }
    }
  >
    <WithStyles(AppBar)
      className="bar"
      color="default"
      data-aos="zoom-in-up"
      position="static"
    >
      <WithStyles(Tabs)
        fullWidth={true}
        indicatorColor="primary"
        onChange={[Function]}
        textColor="primary"
        value={0}
      >
        <WithStyles(Tab)
          label="User Information Section"
        />
        <WithStyles(Tab)
          label="Change Email Section"
        />
        <WithStyles(Tab)
          label="Change Password Section"
        />
      </WithStyles(Tabs)>
    </WithStyles(AppBar)>
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={false}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      onChangeIndex={[Function]}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "readOnly": true,
                }
              }
              className="push-down"
              fullWidth={true}
              id="name"
              label="Full Name"
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="address"
              label="Full Address"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="secondary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Update Address
              <pure(HomeIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentPassword"
              label="Current Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="email"
              label="New Email"
              onChange={[Function]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Email
              <pure(EmailIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
      <TabContainer>
        <WithStyles(Card)
          className="input-paper"
          data-aos="zoom-in-up"
        >
          <WithStyles(CardContent)>
            <TextField
              InputProps={
                Object {
                  "endAdornment": <WithStyles(InputAdornment)
                    position="end"
                  >
                    <WithStyles(Tooltip)
                      placement="top"
                      title="Show Password"
                    >
                      <WithStyles(IconButton)
                        onClick={[Function]}
                      >
                        <pure(VisibilityOffIcon) />
                      </WithStyles(IconButton)>
                    </WithStyles(Tooltip)>
                  </WithStyles(InputAdornment)>,
                }
              }
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="currentUserPassword"
              label="Current User Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <TextField
              className="push-down"
              disabled={false}
              fullWidth={true}
              id="password"
              label="New Password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="inherit"
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                  "marginTop": 10,
                }
              }
              variant="contained"
            >
              Change Password
              <pure(LockOpenIcon)
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
              />
            </WithStyles(Button)>
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </TabContainer>
    </ReactSwipableView>
  </div>
</div>
`;
