// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserHome Component When provided with no props Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserHome />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="user-header"
        >
          <WithStyles(Typography)
            style={
              Object {
                "flex": 1,
              }
            }
            variant="display2"
          >
            Welcome, 
            
            <WithStyles(Button)
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                }
              }
            >
              <pure(ExitToAppIcon)
                style={
                  Object {
                    "marginRight": "5px",
                  }
                }
              />
               Signout
            </WithStyles(Button)>
            <WithStyles(Button)
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                }
              }
            >
              <pure(PersonIcon) />
               Profile
            </WithStyles(Button)>
          </WithStyles(Typography)>
        </div>,
        <WithStyles(Divider) />,
        <UserInputFoodChoices
          userUID=""
        />,
      ],
      "style": Object {
        "padding": "50px 200px",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Typography)
            style={
              Object {
                "flex": 1,
              }
            }
            variant="display2"
          >
            Welcome, 
            
            <WithStyles(Button)
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                }
              }
            >
              <pure(ExitToAppIcon)
                style={
                  Object {
                    "marginRight": "5px",
                  }
                }
              />
               Signout
            </WithStyles(Button)>
            <WithStyles(Button)
              onClick={[Function]}
              style={
                Object {
                  "float": "right",
                }
              }
            >
              <pure(PersonIcon) />
               Profile
            </WithStyles(Button)>
          </WithStyles(Typography)>,
          "className": "user-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "Welcome, ",
              "",
              <WithStyles(Button)
                onClick={[Function]}
                style={
                  Object {
                    "float": "right",
                  }
                }
              >
                <pure(ExitToAppIcon)
                  style={
                    Object {
                      "marginRight": "5px",
                    }
                  }
                />
                 Signout
              </WithStyles(Button)>,
              <WithStyles(Button)
                onClick={[Function]}
                style={
                  Object {
                    "float": "right",
                  }
                }
              >
                <pure(PersonIcon) />
                 Profile
              </WithStyles(Button)>,
            ],
            "style": Object {
              "flex": 1,
            },
            "variant": "display2",
          },
          "ref": null,
          "rendered": Array [
            "Welcome, ",
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <pure(ExitToAppIcon)
                    style={
                      Object {
                        "marginRight": "5px",
                      }
                    }
                  />,
                  " Signout",
                ],
                "onClick": [Function],
                "style": Object {
                  "float": "right",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "style": Object {
                      "marginRight": "5px",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                " Signout",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <pure(PersonIcon) />,
                  " Profile",
                ],
                "onClick": [Function],
                "style": Object {
                  "float": "right",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                " Profile",
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "userUID": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="user-header"
          >
            <WithStyles(Typography)
              style={
                Object {
                  "flex": 1,
                }
              }
              variant="display2"
            >
              Welcome, 
              
              <WithStyles(Button)
                onClick={[Function]}
                style={
                  Object {
                    "float": "right",
                  }
                }
              >
                <pure(ExitToAppIcon)
                  style={
                    Object {
                      "marginRight": "5px",
                    }
                  }
                />
                 Signout
              </WithStyles(Button)>
              <WithStyles(Button)
                onClick={[Function]}
                style={
                  Object {
                    "float": "right",
                  }
                }
              >
                <pure(PersonIcon) />
                 Profile
              </WithStyles(Button)>
            </WithStyles(Typography)>
          </div>,
          <WithStyles(Divider) />,
          <UserInputFoodChoices
            userUID=""
          />,
        ],
        "style": Object {
          "padding": "50px 200px",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Typography)
              style={
                Object {
                  "flex": 1,
                }
              }
              variant="display2"
            >
              Welcome, 
              
              <WithStyles(Button)
                onClick={[Function]}
                style={
                  Object {
                    "float": "right",
                  }
                }
              >
                <pure(ExitToAppIcon)
                  style={
                    Object {
                      "marginRight": "5px",
                    }
                  }
                />
                 Signout
              </WithStyles(Button)>
              <WithStyles(Button)
                onClick={[Function]}
                style={
                  Object {
                    "float": "right",
                  }
                }
              >
                <pure(PersonIcon) />
                 Profile
              </WithStyles(Button)>
            </WithStyles(Typography)>,
            "className": "user-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "Welcome, ",
                "",
                <WithStyles(Button)
                  onClick={[Function]}
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                >
                  <pure(ExitToAppIcon)
                    style={
                      Object {
                        "marginRight": "5px",
                      }
                    }
                  />
                   Signout
                </WithStyles(Button)>,
                <WithStyles(Button)
                  onClick={[Function]}
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                >
                  <pure(PersonIcon) />
                   Profile
                </WithStyles(Button)>,
              ],
              "style": Object {
                "flex": 1,
              },
              "variant": "display2",
            },
            "ref": null,
            "rendered": Array [
              "Welcome, ",
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <pure(ExitToAppIcon)
                      style={
                        Object {
                          "marginRight": "5px",
                        }
                      }
                    />,
                    " Signout",
                  ],
                  "onClick": [Function],
                  "style": Object {
                    "float": "right",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "style": Object {
                        "marginRight": "5px",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  " Signout",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <pure(PersonIcon) />,
                    " Profile",
                  ],
                  "onClick": [Function],
                  "style": Object {
                    "float": "right",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  " Profile",
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "userUID": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
