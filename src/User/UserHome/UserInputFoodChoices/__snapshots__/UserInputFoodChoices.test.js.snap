// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render UserInputFoodChoices Compoenent correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserInputFoodChoices>
    LunchIn
  </UserInputFoodChoices>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(CardHeader)
          title="Please enter your food choices:"
        />,
        <WithStyles(CardContent)>
          <WithStyles(Snackbar)
            autoHideDuration={6000}
            message=""
            onClose={[Function]}
            open={false}
          />
          <TextField
            className="addFoodChoice"
            fullWidth={true}
            inputProps={
              Object {
                "style": Object {
                  "textAlign": "center",
                },
              }
            }
            name="inputFoodName"
            onChange={[Function]}
            placeholder="Food name"
            required={true}
            select={false}
            value=""
            variant="standard"
          />
          <WithStyles(Button)
            className="input-button"
            color="primary"
            disabled={true}
            onClick={[Function]}
            style={
              Object {
                "marginBottom": 5,
                "marginTop": 10,
              }
            }
            variant="raised"
          >
            Add Food
          </WithStyles(Button)>
          <div
            className="random-food-section"
          />
        </WithStyles(CardContent)>,
      ],
      "className": "input-paper",
      "data-aos": "zoom-in-up",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "title": "Please enter your food choices:",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Snackbar)
              autoHideDuration={6000}
              message=""
              onClose={[Function]}
              open={false}
            />,
            <TextField
              className="addFoodChoice"
              fullWidth={true}
              inputProps={
                Object {
                  "style": Object {
                    "textAlign": "center",
                  },
                }
              }
              name="inputFoodName"
              onChange={[Function]}
              placeholder="Food name"
              required={true}
              select={false}
              value=""
              variant="standard"
            />,
            <WithStyles(Button)
              className="input-button"
              color="primary"
              disabled={true}
              onClick={[Function]}
              style={
                Object {
                  "marginBottom": 5,
                  "marginTop": 10,
                }
              }
              variant="raised"
            >
              Add Food
            </WithStyles(Button)>,
            null,
            null,
            <div
              className="random-food-section"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autoHideDuration": 6000,
              "message": "",
              "onClose": [Function],
              "open": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "addFoodChoice",
              "fullWidth": true,
              "inputProps": Object {
                "style": Object {
                  "textAlign": "center",
                },
              },
              "name": "inputFoodName",
              "onChange": [Function],
              "placeholder": "Food name",
              "required": true,
              "select": false,
              "value": "",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add Food",
              "className": "input-button",
              "color": "primary",
              "disabled": true,
              "onClick": [Function],
              "style": Object {
                "marginBottom": 5,
                "marginTop": 10,
              },
              "variant": "raised",
            },
            "ref": null,
            "rendered": "Add Food",
            "type": [Function],
          },
          null,
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "random-food-section",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(CardHeader)
            title="Please enter your food choices:"
          />,
          <WithStyles(CardContent)>
            <WithStyles(Snackbar)
              autoHideDuration={6000}
              message=""
              onClose={[Function]}
              open={false}
            />
            <TextField
              className="addFoodChoice"
              fullWidth={true}
              inputProps={
                Object {
                  "style": Object {
                    "textAlign": "center",
                  },
                }
              }
              name="inputFoodName"
              onChange={[Function]}
              placeholder="Food name"
              required={true}
              select={false}
              value=""
              variant="standard"
            />
            <WithStyles(Button)
              className="input-button"
              color="primary"
              disabled={true}
              onClick={[Function]}
              style={
                Object {
                  "marginBottom": 5,
                  "marginTop": 10,
                }
              }
              variant="raised"
            >
              Add Food
            </WithStyles(Button)>
            <div
              className="random-food-section"
            />
          </WithStyles(CardContent)>,
        ],
        "className": "input-paper",
        "data-aos": "zoom-in-up",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "title": "Please enter your food choices:",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Snackbar)
                autoHideDuration={6000}
                message=""
                onClose={[Function]}
                open={false}
              />,
              <TextField
                className="addFoodChoice"
                fullWidth={true}
                inputProps={
                  Object {
                    "style": Object {
                      "textAlign": "center",
                    },
                  }
                }
                name="inputFoodName"
                onChange={[Function]}
                placeholder="Food name"
                required={true}
                select={false}
                value=""
                variant="standard"
              />,
              <WithStyles(Button)
                className="input-button"
                color="primary"
                disabled={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginBottom": 5,
                    "marginTop": 10,
                  }
                }
                variant="raised"
              >
                Add Food
              </WithStyles(Button)>,
              null,
              null,
              <div
                className="random-food-section"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoHideDuration": 6000,
                "message": "",
                "onClose": [Function],
                "open": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "addFoodChoice",
                "fullWidth": true,
                "inputProps": Object {
                  "style": Object {
                    "textAlign": "center",
                  },
                },
                "name": "inputFoodName",
                "onChange": [Function],
                "placeholder": "Food name",
                "required": true,
                "select": false,
                "value": "",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Add Food",
                "className": "input-button",
                "color": "primary",
                "disabled": true,
                "onClick": [Function],
                "style": Object {
                  "marginBottom": 5,
                  "marginTop": 10,
                },
                "variant": "raised",
              },
              "ref": null,
              "rendered": "Add Food",
              "type": [Function],
            },
            null,
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "random-food-section",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
